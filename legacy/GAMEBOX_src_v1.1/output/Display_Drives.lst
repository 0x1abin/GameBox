C51 COMPILER V9.52.0.0   DISPLAY_DRIVES                                                    10/24/2014 23:17:55 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DISPLAY_DRIVES
OBJECT MODULE PLACED IN .\output\Display_Drives.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\Display_Drives.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\output\Disp
                    -lay_Drives.lst) OBJECT(.\output\Display_Drives.obj)

line level    source

   1          #include "config.h"
   2          
   3          
   4          #define A       0
   5          #define B       1
   6          #define ON      1       //共阴
   7          void Data_CLR(bit ab)   //硬件上的原因，点阵共阳，数码管共阴,所以带参
   8          {
   9   1              LED_D0 = ab;LED_D1 = ab;LED_D2 = ab;LED_D3 = ab;
  10   1              LED_D4 = ab;LED_D5 = ab;LED_D6 = ab;LED_D7 = ab;
  11   1      }
  12          
  13          void ROW_data(uint8 rdata)//行选择模块
  14          {
  15   1              switch (rdata)
  16   1              {               
  17   2                      case 0 :LED_R16 = 0; LED_R1 = 1;        break;
  18   2                      case 1 :LED_R1  = 0; LED_R2 = 1;        break;
  19   2                      case 2 :LED_R2  = 0; LED_R3 = 1;        break;
  20   2                      case 3 :LED_R3  = 0; LED_R4 = 1;        break;
  21   2                      case 4 :LED_R4  = 0; LED_R5 = 1;        break;
  22   2                      case 5 :LED_R5  = 0; LED_R6 = 1;        break;
  23   2                      case 6 :LED_R6  = 0; LED_R7 = 1;        break;
  24   2                      case 7 :LED_R7  = 0; LED_R8 = 1;        break;
  25   2                      
  26   2                      case 8 :LED_R8  = 0; LED_R9 = 1;        break;
  27   2                      case 9 :LED_R9  = 0; LED_R10= 1;        break;
  28   2                      case 10:LED_R10 = 0; LED_R11= 1;        break;
  29   2                      case 11:LED_R11 = 0; LED_R12= 1;        break;
  30   2                      case 12:LED_R12 = 0; LED_R13= 1;        break;
  31   2                      case 13:LED_R13 = 0; LED_R14= 1;        break;
  32   2                      case 14:LED_R14 = 0; LED_R15= 1;        break;
  33   2                      case 15:LED_R15 = 0; LED_R16= 1;        break;
  34   2                      
  35   2                      case 0xff:      LED_R1 = 1;LED_R2 = 1;LED_R3 = 1;LED_R4 = 1;
  36   2                                              LED_R5 = 1;LED_R6 = 1;LED_R7 = 1;LED_R8 = 1;
  37   2                                              LED_R9 = 1;LED_R10= 1;LED_R11= 1;LED_R12= 1;
  38   2                                              LED_R13= 1;LED_R14= 1;LED_R15= 1;LED_R16= 1;    
  39   2                                              break;  //0xff全选模式
  40   2                      default:        LED_R1 = 0;LED_R2 = 0;LED_R3 = 0;LED_R4 = 0;
  41   2                                              LED_R5 = 0;LED_R6 = 0;LED_R7 = 0;LED_R8 = 0;
  42   2                                              LED_R9 = 0;LED_R10= 0;LED_R11= 0;LED_R12= 0;
  43   2                                              LED_R13= 0;LED_R14= 0;LED_R15= 0;LED_R16= 0;    
  44   2                                              break;  //其他关闭所以列选
  45   2              }
  46   1      }
  47          void DisPoint(uint8 x,uint8 y)
  48          {
  49   1              #define L_ON 0
  50   1              ROW_data(88);   //清除
  51   1              Data_CLR(B);
  52   1              
  53   1              ROW_data(y);    //行选择
  54   1              switch (x)
C51 COMPILER V9.52.0.0   DISPLAY_DRIVES                                                    10/24/2014 23:17:55 PAGE 2   

  55   1              {
  56   2                      case 0: LED_D0 = L_ON;  break;
  57   2                      case 1: LED_D1 = L_ON;  break;
  58   2                      case 2: LED_D2 = L_ON;  break;
  59   2                      case 3: LED_D3 = L_ON;  break;
  60   2                      case 4: LED_D4 = L_ON;  break;
  61   2                      case 5: LED_D5 = L_ON;  break;
  62   2                      case 6: LED_D6 = L_ON;  break;
  63   2                      case 7: LED_D7 = L_ON;  break;
  64   2              }
  65   1      }
  66          
  67          void Tns(uint8 n)//短暂延时
  68          {
  69   1              while(n--);
  70   1      }
  71          
  72          void MatxDisp(uint8 *buf,uint8 duty)
  73          {
  74   1              uint8 p,i;
  75   1              bit b;
  76   1              SMG_S1 = 1; SMG_S2 = 1; SMG_S3 = 1;
  77   1              Data_CLR(B);
  78   1              #define LED_OFF  1;
  79   1              for(p=0;p<16;p++)
  80   1              {
  81   2                      ROW_data(p);
  82   2                      for(i=0;i<8;i++)
  83   2                      {
  84   3                              b = ~(bit)(buf[p] & bitman[i]);//共阳取反
  85   3                              switch (i)
  86   3                              {
  87   4                                      case 0: LED_D7 = LED_OFF; Tns(100-duty); LED_D0 = b;    break;
  88   4                                      case 1: LED_D0 = LED_OFF; Tns(100-duty); LED_D1 = b;    break;
  89   4                                      case 2: LED_D1 = LED_OFF; Tns(100-duty); LED_D2 = b;    break;
  90   4                                      case 3: LED_D2 = LED_OFF; Tns(100-duty); LED_D3 = b;    break;
  91   4                                      case 4: LED_D3 = LED_OFF; Tns(100-duty); LED_D4 = b;    break;
  92   4                                      case 5: LED_D4 = LED_OFF; Tns(100-duty); LED_D5 = b;    break;
  93   4                                      case 6: LED_D5 = LED_OFF; Tns(100-duty); LED_D6 = b;    break;
  94   4                                      case 7: LED_D6 = LED_OFF; Tns(100-duty); LED_D7 = b;    break;
  95   4                                      default: break;
  96   4                              }
  97   3                              Tns(duty);
  98   3                      }
  99   2                      LED_D7 = 1;             
 100   2              }
 101   1      }
 102          
 103          void SMG_Num(uint8 n)   //数码管段码
 104          {
 105   1              switch (n)
 106   1              {
 107   2                      case 0: SMG_A = ON; SMG_B = ON; SMG_C = ON; SMG_D = ON; SMG_E = ON; SMG_F = ON;
 108   2                              break;
 109   2                      case 1: SMG_B = ON; SMG_C = ON;
 110   2                              break;
 111   2                      case 2: SMG_A = ON; SMG_B = ON; SMG_D = ON; SMG_E = ON; SMG_G = ON;
 112   2                              break;
 113   2                      case 3: SMG_A = ON; SMG_B = ON; SMG_C = ON; SMG_D = ON; SMG_G = ON;
 114   2                              break;
 115   2                      case 4: SMG_B = ON; SMG_C = ON; SMG_F = ON; SMG_G = ON;
 116   2                              break;
C51 COMPILER V9.52.0.0   DISPLAY_DRIVES                                                    10/24/2014 23:17:55 PAGE 3   

 117   2                      case 5: SMG_A = ON; SMG_C = ON; SMG_D = ON; SMG_F = ON; SMG_G = ON;
 118   2                              break;
 119   2                      case 6: SMG_A = ON; SMG_C = ON; SMG_D = ON; SMG_E = ON; SMG_F = ON; SMG_G = ON;
 120   2                              break;
 121   2                      case 7: SMG_A = ON; SMG_B = ON; SMG_C = ON;
 122   2                              break;
 123   2                      case 8: SMG_A = ON; SMG_B = ON; SMG_C = ON; SMG_D = ON; SMG_E = ON; SMG_F = ON; SMG_G = ON;
 124   2                              break;
 125   2                      case 9: SMG_A = ON; SMG_B = ON; SMG_C = ON; SMG_D = ON; SMG_F = ON; SMG_G = ON;
 126   2                              break;
 127   2              }
 128   1      }
 129          void SMG_Display(uint16 goal,uint8 duty)
 130          {
 131   1              
 132   1              ROW_data(88);//屏蔽点阵
 133   1              
 134   1              Data_CLR(A);
 135   1              Tns(100-duty);
 136   1              SMG_S1 = 0;
 137   1              SMG_Num(goal/100);
 138   1              Tns(duty);
 139   1              
 140   1              Data_CLR(A);
 141   1              Tns(100-duty);
 142   1              SMG_S1 = 1; SMG_S2 = 0; 
 143   1              SMG_Num(goal/10%10);
 144   1              Tns(duty);
 145   1              
 146   1              Data_CLR(A);
 147   1              Tns(100-duty);
 148   1              SMG_S2 = 1; SMG_S3 = 0;
 149   1              SMG_Num(goal%10);
 150   1              Tns(duty);
 151   1              
 152   1              SMG_S3 = 1;
 153   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    868    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
